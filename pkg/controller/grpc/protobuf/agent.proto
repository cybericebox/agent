syntax = "proto3";
package agent;
option go_package = "github.com/cybericebox/agent/pkg/controller/grpc/protobuf";

service Agent {
  // metrics
  rpc Ping(EmptyRequest) returns (EmptyResponse) {}

  // laboratory
  rpc CreateLabs(CreateLabsRequest) returns (CreateLabsResponse) {}
  rpc DeleteLabs(DeleteLabsRequest) returns (EmptyResponse) {}
  rpc AddLabChallenges(AddLabChallengesRequest) returns (EmptyResponse) {}
  rpc DeleteLabsChallenges(DeleteLabsChallengesRequest) returns (EmptyResponse) {}

  rpc GetLabs(GetLabsRequest) returns (GetLabsResponse) {}

  // challenge
  rpc StartChallenge(ChallengeRequest) returns (EmptyResponse) {}
  rpc StopChallenge(ChallengeRequest) returns (EmptyResponse) {}
  rpc ResetChallenge(ChallengeRequest) returns (EmptyResponse) {}

}

message EmptyRequest {}

message EmptyResponse {}


// agent

message CreateLabsRequest {
  uint32 cidrMask = 1;
  uint32 count = 2;
}

message GetLabsRequest {
  repeated string ids = 1;
}

message DeleteLabsRequest {
  repeated string ids = 1;
}

message AddLabChallengesRequest {
  string labID = 1;
  repeated Challenge challenges = 2;
}

message DeleteLabsChallengesRequest {
  repeated string labIDs = 1;
  repeated string challengeIDs = 2;
}

message CreateLabsResponse {
  repeated string ids = 1;
}

message GetLabsResponse {
  repeated Lab labs = 1;
}

message Lab {
  string id = 1;
  string cidr = 2;
}

message Challenge {
  string id = 1;
  repeated Instance instances = 2;
}

message Instance {
  string id = 1;
  string image = 2;
  Resources resources = 3;
  repeated EnvVariable envs = 4;
  repeated DNSRecord records = 5;
}

message Resources {
  string memory = 1;
  string cpu = 2;
}

message EnvVariable {
  string name = 1;
  string value = 2;
}

message DNSRecord {
  string type = 1;
  string name = 2;
  string data = 3;
}

// challenge

message ChallengeRequest {
  string id = 1;
  string labID = 2;
}