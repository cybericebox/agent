syntax = "proto3";
package agent;
option go_package = "github.com/cybericebox/agent/pkg/controller/grpc/protobuf";

service Agent {
  // metrics
  rpc Ping(EmptyRequest) returns (EmptyResponse) {}
  rpc Monitoring(stream EmptyRequest) returns (stream MonitoringResponse) {}

  // laboratory
  rpc GetLabs(LabsRequest) returns (GetLabsResponse) {}
  rpc CreateLabs(CreateLabsRequest) returns (CreateLabsResponse) {}
  rpc DeleteLabs(LabsRequest) returns (EmptyResponse) {}
  rpc StopLabs(LabsRequest) returns (EmptyResponse) {}
  rpc StartLabs(LabsRequest) returns (EmptyResponse) {}

  // challenge
  rpc AddLabsChallenges(AddLabsChallengesRequest) returns (EmptyResponse) {}
  rpc DeleteLabsChallenges(LabsChallengesRequest) returns (EmptyResponse) {}
  rpc StartLabsChallenges(LabsChallengesRequest) returns (EmptyResponse) {}
  rpc StopLabsChallenges(LabsChallengesRequest) returns (EmptyResponse) {}
  rpc ResetLabsChallenges(LabsChallengesRequest) returns (EmptyResponse) {}

}

message EmptyRequest {}

message EmptyResponse {}


// agent

message CreateLabsRequest {
  uint32 CIDRMask = 1;
  uint32 Count = 2;
}

message LabsRequest {
  repeated string IDs = 1;
}

message AddLabsChallengesRequest {
  repeated string LabIDs = 1;
  repeated Challenge Challenges = 2;
  repeated FlagEnvVariable FlagEnvVariables = 3;
}

message LabsChallengesRequest {
  repeated string LabIDs = 1;
  repeated string ChallengeIDs = 2;
}

message CreateLabsResponse {
  repeated Lab Labs = 1;
}

message GetLabsResponse {
  repeated Lab Labs = 1;
}

message MonitoringResponse {
  repeated LabStatus Labs = 1;
}

message Lab {
  string ID = 1;
  string CIDR = 2;
}

message LabStatus {
  string ID = 1;
  string CIDR = 2;
  DNSStatus DNS = 3;
  repeated InstanceStatus Instances = 4;
}

message DNSStatus {
  int32 Status = 2;
  string Reason = 3;
  Resources Resources = 4;
}

message InstanceStatus {
  string ID = 1;
  string ChallengeID = 2;
  int32 Status = 3;
  string Reason = 4;
  Resources Resources = 5;
}

message Challenge {
  string ID = 1;
  repeated Instance Instances = 2;
}

message Instance {
  string ID = 1;
  string Image = 2;
  Resources Resources = 3;
  repeated EnvVariable Envs = 4;
  repeated DNSRecord Records = 5;
}

message Resources {
  int64 Memory = 1;
  int64 CPU = 2;
}

message EnvVariable {
  string Name = 1;
  string Value = 2;
}

message FlagEnvVariable {
  string LabID = 1;
  string ChallengeID = 2;
  string InstanceID = 3;
  string Variable = 4;
  string Flag = 5;
}

message DNSRecord {
  string Type = 1;
  string Name = 2;
  string Data = 3;
}
